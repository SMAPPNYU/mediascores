% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mediascores.R
\name{mediascores}
\alias{mediascores}
\title{Estimate the mediascores model}
\usage{
mediascores(
  Y,
  group = NULL,
  anchors,
  user_variance = FALSE,
  variational = FALSE,
  chains = 4,
  cores = getOption("mc.cores", 1L),
  threads = cores,
  iter = 2000,
  warmup = floor(iter/2),
  refresh = 50,
  ...
)
}
\arguments{
\item{Y}{matrix or dataframe of dimension \code{n_users x n_domains}
containing counts of the frequency with which each user (row) shares a
given URL domain (column). No missing data are permitted.}

\item{group}{vector of length \code{n_users} indicating group membership of
each user. If \code{NULL}, every user is assigned to the same group.}

\item{anchors}{vector of length 2 indicating the index/column position of the
anchor domains. The first index defines the meaning of lower values of
the scale; the second, upper values. For example, setting the first
value to indicate the column representing the New York Times and the
second value to represent the FOX News column would render lower values
of \eqn{\vartheta_i} and \eqn{\zeta_m} to indicate liberalism; higher
values, conservativism.}

\item{user_variance}{logical, whether to include a variance parameter for
each user (i.e. whether to include or exclude \eqn{\omega_i}. Setting
this argument to \code{TRUE} results in a more computationally demanding
model. There are typically too few data to identify these additional
parameters.}

\item{variational}{logical, whether variational inference is used for
estimation (\code{rstan::\link[rstan]{vb}}). If set to \code{FALSE},
the standard NUTS sampler in Stan is used
(\code{rstan::\link[rstan]{sampling}}). Note: variational Bayes is many
orders of magnitude faster, but it is recommended that its estimates be
used for final inference unless the size of the data make use of sampling
infeasible.}

\item{chains}{integer, the number of Markov chains to run (for
\code{variational = FALSE}. The default is 4.}

\item{cores}{integer, the number of cores to use when running chains in
parallel.}

\item{threads}{integer, the number of total threads to use for
within-chain parallelization. Defaults to the value of \code{cores}.}

\item{iter}{integer, the number of total iterations per chain.
Defaults to 2000.}

\item{warmup}{integer, the number of warmup/burnin iterations per chain.
Defaults to \code{floor(iter/2)}.}

\item{refresh}{integer, the number of iterations per chain before sampling
progress on each chain is displayed to the user.}

\item{...}{additional arguments passed to \code{rstan::\link[rstan]{sampling}}
(for \code{variational = TRUE}) or \code{rstan::\link[rstan]{vb}}
(for \code{variational = FALSE})}
}
\value{
An object of S4 class stanfit (see \code{\link[rstan]{stanfit-class}})
representing the fitted results. You can use \code{\link{point_est}} and
\code{\link{rhat}} to extract point estimates and rhat values for the
posterior object.
}
\description{
This function is the workhorse of the mediascores library. It fits the model
of news media sharing as described in more detail in the library vignette and
in the "Model Details" section further below.
}
\section{Model details}{


The model fit by the \code{mediascores()} function is a negative binomial
item-response-style model of the following form:

\deqn{NegBin(\pi_{img}, \omega_i\omega_m)}
\deqn{\pi_{img} = \alpha_i + \gamma_m - ||\vartheta_i - \zeta_m||^2,}

where \eqn{\alpha_i} denotes a user-level intercept; \eqn{\gamma_m}, a news
media domain intercept; \eqn{\vartheta_i} the sharing-ideology of user
\eqn{i}; \eqn{zeta_m} the ideology of news media domain \eqn{m}; and
\eqn{\omega_i} and \eqn{\omega_m}, user- and domain-level variance parameters.
Details regarding the priors for these parameters are discussed in the
library's vignette. A group-specific common prior distribution can be placed
on users' news-sharing ideology parameters \eqn{\vartheta_i} through the
integer-valued \code{group} argument (a vector of integers specifying the
affiliation of each user).
}

\examples{
\dontrun{
sim_data <- simulate_data(200, 500)
posterior <- mediascores(sim_data$Y, sim_data$group, sim_data$anchors,
                         variational = FALSE, chains = 2)
}
}
